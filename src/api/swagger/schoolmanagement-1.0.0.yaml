---
openapi: 3.0.0
info:
    title: Student Management API
    description: This project was carried out in collaboration with 4 people.
    version: 1.0.0
servers:
    - url: http://13.209.48.64/12033
      description: school_management-api
tags:
    - name: users
      description: Users API
    - name: schools
      description: School API
    - name: auth
      description: Auth API
    - name: teacher
      description: Teacher API
    - name: student
      description: Student API
paths:
    /api/school/all:
        get:
            tags:
                - schools
            summary: 모든 학교 검색
            description: 모든 학교 검색
            responses:
                "200":
                    description: search schools
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SchoolApi200SuccessResponse"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SchoolApi400FailResponse"
    # /api/users/:
    # get:
    #     tags:
    #         - users
    #     summary: 모든 유저 검색
    #     description: 모든 유저 검색
    #     parameters:
    #         - name: email
    #           in: query
    #           description: Email for looking up Users
    #           required: false
    #           style: form
    #           explode: true
    #           schema:
    #               type: string
    #               example: admin
    #         - name: id
    #           in: query
    #           description: ID for looking up Users
    #           required: false
    #           style: form
    #           explode: true
    #           schema:
    #               type: integer
    #               format: int32
    #               example: 1
    #     responses:
    #         "200":
    #             description: search results matching criteria
    #             content:
    #                 application/json:
    #                     schema:
    #                         $ref: "#/components/schemas/UserApi200SuccessResponse"
    #         "400":
    #             description: bad input parameter
    #             content:
    #                 application/json:
    #                     schema:
    #                         $ref: "#/components/schemas/UserApi400FailResponse"
    # post:
    #     tags:
    #         - users
    #     summary: 회원가입(유저)
    #     description: 유저 회원가입(등록)
    #     requestBody:
    #         description: Created user object
    #         content:
    #             application/json:
    #                 schema:
    #                     $ref: "#/components/schemas/api_users_body"
    # responses:
    #     "201":
    #         description: users created
    #         content:
    #             application/json:
    #                 schema:
    #                     $ref: "#/components/schemas/UserApi201SuccessResponse"
    #     "400":
    #         description: "invalid input, object invalid"
    #         content:
    #             application/json:
    #                 schema:
    #                     $ref: "#/components/schemas/UserApi400FailResponse"
    /api/auth/login/:
        post:
            tags:
                - auth
            summary: 로그인
            description: 로그인
            requestBody:
                description: email and password required for login
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/auth_login_body"
            responses:
                "200":
                    description: login success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/LoginApi200SuccessResponse"
                "400":
                    description: ID or Password was not correct
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/LoginApi400FailResponse"
    /api/auth/logout/:
        post:
            tags:
                - auth
            summary: 로그아웃
            description: 로그아웃
            responses:
                "200":
                    description: logout success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/LogoutApi200SuccessResponse"
                "400":
                    description: Bad Requset
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/LogoutApi400FailResponse"
    /api/users/private/generateAdmin:
        post:
            tags:
                - users
            summary: 관리자 회원가입(admin)
            description: 관리자 회원가입(등록)
            requestBody:
                description: Input Admin Data
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/private_generateAdmin_body"
            responses:
                "201":
                    description: users created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserApi201SuccessResponse"
                "400":
                    description: "invalid input, object invalid"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserApi400FailResponse"
    /api/users/teacher:
        post:
            tags:
                - teacher
            summary: 선생님 회원가입(teacher)
            description: 선생님 회원가입(등록)
            requestBody:
                description: Input Teacher Data
                content:
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/users_teacher_body"
            responses:
                "201":
                    description: users created
                    content:
                        multipart/form-data:
                            schema:
                                $ref: "#/components/schemas/TeacherApi201SuccessResponse"
                "400":
                    description: "invalid input, object invalid"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TeacherApi400FailResponse"
        put:
            tags:
                - teacher
            summary: 선생님 수정
            description: 선생님 수정
            requestBody:
                description: If you want to change data Input that!
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/api_update_teacher_body"
            responses:
                "201":
                    description: Success to update
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TeacherApi201SuccessResponse"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TeacherApi400FailResponse"

        delete:
            tags:
                - teacher
            summary: 선생님 삭제
            description: 선생님 삭제
            parameters:
                - name: id
                  in: query
                  description: ID for looking up Users
                  required: true
                  style: form
                  explode: true
                  schema:
                      type: integer
                      format: int32
                      example: 99
            responses:
                "201":
                    description: Success to delete
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TeacherDeleteApi201SuccessResponse"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TeacherApi400FailResponse"
    /api/users/student:
        post:
            tags:
                - student
            summary: 학생 회원가입(student)
            description: 학생 회원가입(등록)
            requestBody:
                description: Input Student Data
                content:
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/users_student_body"
            responses:
                "201":
                    description: users created
                    content:
                        multipart/form-data:
                            schema:
                                $ref: "#/components/schemas/StudentApi201SuccessResponse"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StudentApi400FailResponse"
        put:
            tags:
                - student
            summary: 학생 수정
            description: 학생 수정
            requestBody:
                description: If you want to change data Input that!
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/api_update_student_body"
            responses:
                "201":
                    description: Success to update
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StudentApi201SuccessResponse"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TeacherApi400FailResponse"
        delete:
            tags:
                - student
            summary: 학생 삭제
            description: 학생 삭제
            parameters:
                - name: id
                  in: query
                  description: ID for looking up Users
                  required: true
                  style: form
                  explode: true
                  schema:
                      type: integer
                      format: int32
                      example: 99
            responses:
                "201":
                    description: Success to delete
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StudentDeleteApi201SuccessResponse"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StudentApi400FailResponse"
    /api/users/student/all:
        get:
            tags:
                - student
            summary: 학생 불러오기
            description: 학생 찾기
            responses:
                "200":
                    description: Find student
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StudentApi200SuccessResponse"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserApi400FailResponse"
    /api/users/teacher/all:
        get:
            tags:
                - teacher
            summary: 선생님 불러오기
            description: 선생님 찾기
            responses:
                "200":
                    description: Find teacher
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TeacherApi200SuccessResponse"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserApi400FailResponse"

components:
    schemas:
        # 유저 찾기 성공시 200 반환
        UserApi200SuccessResponse:
            type: object
            properties:
                success:
                    type: boolean
                    example: true
                statusCode:
                    type: integer
                    example: 200
                message:
                    type: string
                    example: 유저 찾기 성공
                data:
                    $ref: "#/components/schemas/UserApiSuccessResponse_data"
        # 유저 생성 성공시 200 반환 및 Data 반환
        UserApi201SuccessResponse:
            type: object
            properties:
                success:
                    type: boolean
                    example: true
                statusCode:
                    type: integer
                    example: 201
                message:
                    type: string
                    example: 회원가입 성공
                data:
                    $ref: "#/components/schemas/UserApiSuccessResponse_data"
        #유저 400에러
        UserApi400FailResponse:
            type: object
            properties:
                success:
                    type: boolean
                    example: false
                statusCode:
                    type: integer
                    example: 400
                message:
                    type: string
                    example: Bad Request
        #학교 검색 성공시 200 반환
        SchoolApi200SuccessResponse:
            type: object
            properties:
                success:
                    type: boolean
                    example: true
                statusCode:
                    type: integer
                    example: 200
                message:
                    type: string
                    example: 학교 검색 성공
                data:
                    $ref: "#/components/schemas/SchoolApiSuccessResponse_data"
        # 학교 검색 실패시 400에러 반환
        SchoolApi400FailResponse:
            type: object
            properties:
                success:
                    type: boolean
                    example: false
                statusCode:
                    type: integer
                    example: 400
                message:
                    type: string
                    example: 학교 검색 실패
        #로그인 성공시 토큰 반환 및 200 반환
        LoginApi200SuccessResponse:
            type: object
            properties:
                success:
                    type: boolean
                    example: true
                statusCode:
                    type: integer
                    example: 200
                message:
                    type: string
                    example: 로그인 성공
                token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InRlc3QxMjM0NUB0ZXN0LmNvbSIsIm5hbWUiOiLqsJzrmKXsnbQiLCJpYXQiOjE2NzM5MzkyODIsImV4cCI6MTY3Mzk0MTA4MiwiaXNzIjoicGpoIn0.mhnym0QHD5YKE7pfhSCIHBPTeX8ivuTm1U5fMTR7R2g
        #로그인 실패시 400 반환
        LoginApi400FailResponse:
            type: object
            properties:
                success:
                    type: boolean
                    example: false
                statusCode:
                    type: integer
                    example: 400
                message:
                    type: string
                    example: 아이디나 비밀번호가 틀립니다.
        #로그아웃 성공시 200반환
        LogoutApi200SuccessResponse:
            type: object
            properties:
                success:
                    type: boolean
                    example: true
                statusCode:
                    type: integer
                    example: 200
                message:
                    type: string
                    example: 로그아웃되었습니다.
        #로그아웃 실패시 400 반환
        LogoutApi400FailResponse:
            type: object
            properties:
                success:
                    type: boolean
                    example: false
                statusCode:
                    type: integer
                    example: 400
                message:
                    type: string
                    example: 로그아웃 실패

        #선생님 리스트 반환 성공시 200반환
        TeacherApi200SuccessResponse:
            type: object
            properties:
                success:
                    type: boolean
                    example: true
                statusCode:
                    type: integer
                    example: 200
                message:
                    type: string
                    example: 선생님 찾기 성공
                data:
                    $ref: "#/components/schemas/users_teacher_body"
        #선생님 삭제 성공시 201 반환
        TeacherDeleteApi201SuccessResponse:
            type: object
            properties:
                success:
                    type: boolean
                    example: true
                statusCode:
                    type: integer
                    example: 201
                message:
                    type: string
                    example: 선생님 삭제 성공
        #선생님 생성 성공시 201 반환
        TeacherApi201SuccessResponse:
            type: object
            properties:
                success:
                    type: boolean
                    example: true
                statusCode:
                    type: integer
                    example: 201
                message:
                    type: string
                    example: 선생님 등록(수정) 성공
                data:
                    $ref: "#/components/schemas/TeacherApiSuccessResponse_data"
        #선생님 생성 실패시 400 반환
        TeacherApi400FailResponse:
            type: object
            properties:
                success:
                    type: boolean
                    example: false
                statusCode:
                    type: integer
                    example: 400
                message:
                    type: string
                    example: Bad Request.
        StudentApi200SuccessResponse:
            type: object
            properties:
                success:
                    type: boolean
                    example: true
                statusCode:
                    type: integer
                    example: 200
                message:
                    type: string
                    example: 선생님 찾기 성공
                data:
                    $ref: "#/components/schemas/users_student_body"
        #학생 삭제 성공시 201 반환
        StudentDeleteApi201SuccessResponse:
            type: object
            properties:
                success:
                    type: boolean
                    example: true
                statusCode:
                    type: integer
                    example: 201
                message:
                    type: string
                    example: 학생 삭제 성공
        #학생 생성 성공시 201 반환
        StudentApi201SuccessResponse:
            type: object
            properties:
                success:
                    type: boolean
                    example: true
                statusCode:
                    type: integer
                    example: 201
                message:
                    type: string
                    example: 학생 등록(수정) 성공
                data:
                    $ref: "#/components/schemas/StudentApiSuccessResponse_data"
        #학생 찾기시 에러 400 반환
        StudentApi400FailResponse:
            type: object
            properties:
                success:
                    type: boolean
                    example: false
                statusCode:
                    type: integer
                    example: 400
                message:
                    type: string
                    example: Bad Request.
        #user등록시 body
        api_users_body:
            properties:
                email:
                    type: string
                    example: user
                password:
                    type: string
                    example: test1234
        #login시 body
        auth_login_body:
            properties:
                email:
                    type: string
                    example: admin
                password:
                    type: string
                    example: test1234
        #관리자 등록시 body
        private_generateAdmin_body:
            properties:
                email:
                    type: string
                    example: admin
                password:
                    type: string
                    example: test1234
        #선생님 등록시 body
        users_teacher_body:
            properties:
                email:
                    type: string
                    example: teacher
                password:
                    type: string
                    example: "1234"
                name:
                    type: string
                    example: "James"
                grade:
                    type: integer
                    example: 1
                subject:
                    type: integer
                    example: 1
                gender:
                    type: integer
                    example: 1
                phone_number:
                    type: string
                    example: "01012341234"
                school_id:
                    type: integer
                    example: 1
                profile_image_url:
                    type: string
                    example: upload/image-1683376876460.png
                user_about:
                    type: string
                    example: "hi, i'm james."
        #학생 등록시 body
        users_student_body:
            properties:
                email:
                    type: string
                    example: student
                password:
                    type: string
                    example: "1234"
                name:
                    type: string
                    example: "Dean"
                grade:
                    type: integer
                    example: 1
                gender:
                    type: integer
                    example: 1
                phone_number:
                    type: string
                    example: "01012341234"
                school_id:
                    type: integer
                    example: 1
                profile_image_url:
                    type: string
                    example: upload/image-1683376876460.png
                user_about:
                    type: string
                    example: "hi, i'm ob."
        #유저 reponse_data
        UserApiSuccessResponse_data:
            type: object
            properties:
                id:
                    type: integer
                    example: 1
                email:
                    type: string
                    example: admin
                role_id:
                    type: integer
                    example: 5
                school_id:
                    type: integer
                    example: 1
        #학교 reponse_data
        SchoolApiSuccessResponse_data:
            type: object
            properties:
                school_id:
                    type: integer
                    format: int32
                    example: 1
                school_name:
                    type: string
                    example: 가천고등학교
                school_email:
                    type: string
                    format: email
                    example: gacheon.ac.kr
        #선생님 reponse_data
        TeacherApiSuccessResponse_data:
            type: object
            properties:
                id:
                    type: integer
                    example: 1
                email:
                    type: string
                    example: teacher
                role_id:
                    type: integer
                    example: 3
                name:
                    type: string
                    example: "James"
                class:
                    type: integer
                    example: 1
                subject:
                    type: integer
                    example: 1
                gender:
                    type: integer
                    example: 1
                phone_number:
                    type: string
                    example: "01012341234"
                school_id:
                    type: integer
                    example: 1
                profile_image_url:
                    type: string
                    example: upload/image-1683376876460.png
                user_about:
                    type: string
                    example: "hi, i'm james."
        #학생 reponse_data
        StudentApiSuccessResponse_data:
            type: object
            properties:
                id:
                    type: integer
                    example: 1
                email:
                    type: string
                    example: student
                role_id:
                    type: integer
                    example: 2
                name:
                    type: string
                    example: "Dean"
                class:
                    type: integer
                    example: 1
                subject:
                    type: integer
                    example: 1
                gender:
                    type: integer
                    example: 1
                phone_number:
                    type: string
                    example: "01012341234"
                school_id:
                    type: integer
                    example: 1
                profile_image_url:
                    type: string
                    example: upload/image-1683376876460.png
                user_about:
                    type: string
                    example: "hi, i'm ob."
        #선생님 업데이트시 body
        api_update_teacher_body:
            type: object
            properties:
                subject:
                    type: integer
                    example: 2
                grade:
                    type: integer
                    example: 2
                gender:
                    type: integer
                    example: 1
                email:
                    type: string
                    example: teacher
                user_about:
                    type: string
                    example: update test teacher
                id:
                    type: string
                    example: 99
        #학생 업데이트시 body
        api_update_student_body:
            type: object
            properties:
                grade:
                    type: integer
                    example: 2
                gender:
                    type: integer
                    example: 1
                email:
                    type: string
                    example: student
                user_about:
                    type: string
                    example: update test student
                id:
                    type: string
                    example: 100
